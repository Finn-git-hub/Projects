@model Login
@{  
    ViewData["Title"] = "Reset Password";
}

<h1 class="display-4">Reset Password</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="ResetPassword">
            <div class="form-group">
                <label for="NewPassword" class="control-label">New Password:</label>
                <input id="NewPassword" name="NewPassword" class="form-control" value="@ViewBag.NewPassword?.ToString()"
                       data-val="true" data-val-required="The New Password field is required." />
                @Html.ValidationMessage("NewPassword", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="ConfirmPassword" class="control-label">Confirm Password:</label>
                <input id="ConfirmPassword" name="ConfirmPassword" class="form-control"
                       data-val="true"
                       data-val-equalto="The password and confirmation password do not match."
                       data-val-equalto-other="*.NewPassword"    
                       data-val-required="The Confirm Password field is required." />
                @Html.ValidationMessage("ConfirmPassword", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <a asp-controller="Customer" asp-action="Profile" class="btn btn-dark">Cancel</a>
                <button class="btn btn-primary" type="submit" asp-controller="Login" asp-action="ResetPassword">Reset</button>
                @Html.ValidationMessage("Reset Failed.", new { @class = "text-danger" })
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
